this index.html


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="NewsMonkey| Get free news daily"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">

    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>NewsMonkey| Get free news daily</title>

  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js" integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js" integrity="sha384-Y4oOpwW3duJdCWv5ly8SCFYWqFDsfob/3GkgExXKV4idmbt98QcxXYs9UoXAB7BZ" crossorigin="anonymous"></script>
  </body>
</html>


index.js 

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


App.js

import logo from './logo.svg';
import './App.css';

import React, { Component } from 'react'
import Navbar from './Components/Navbar';
import LoadingBar from 'react-top-loading-bar'
import News from './Components/News';
import {
  BrowserRouter,
  Routes,
  Route,
  Link,
} from "react-router-dom";

export default class App extends Component {

  state={
    progress:0
  }

  setProgress = (progress)=>{
    this.setState({progress:progress})
  }

  render() {
    return (
      <div>
        <BrowserRouter>
        
        <LoadingBar
        color='#f11946'
        height={3}
        progress={this.state.progress}
      />

        <Navbar/>
        <Routes>
        <Route exact path="/" element={<News setProgress={this.setProgress} key="general" pageSize={6} country="in" category="general" />} />
        <Route exact path="/business" element={<News setProgress={this.setProgress} key="business" pageSize={6} country="in" category="business" />} />
        <Route exact path="/entertainment" element={<News setProgress={this.setProgress} key="entertainment" pageSize={6} country="in" category="entertainment" />} />
        <Route exact path="/general" element={<News setProgress={this.setProgress} key="general" pageSize={6} country="in" category="general" />} />
        <Route exact path="/health" element={<News setProgress={this.setProgress} key="health" pageSize={6} country="in" category="health" />} />
        <Route exact path="/science" element={<News setProgress={this.setProgress} key="science" pageSize={6} country="in" category="science" />} />
        <Route exact path="/sports" element={<News setProgress={this.setProgress} key="sports" pageSize={6} country="in" category="sports" />} />
        <Route exact path="/technology" element={<News setProgress={this.setProgress} key="technology" pageSize={6} country="in" category="technology" />} />

        </Routes>
        </BrowserRouter>
      </div>
    )
  }
}

Components/News.js


import React, { Component } from 'react'
import NewsItem from './NewsItem'
import Spinner from './Spinner';
import PropTypes from 'prop-types';
import InfiniteScroll from "react-infinite-scroll-component";



export class News extends Component {
  static propTypes ={
    country: PropTypes.string
  }
  capitalizeFirstLetter=(string)=> {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
constructor(props){
  super(props);
  this.state={
    articles: [],
    loading: true,
    page:1,
    totalResults:0
  }
  document.title =`${this.capitalizeFirstLetter(this.props.category)} - NewsMonkey`;
}

  async updateNews(){
    this.props.setProgress(10);

    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props. category}&apiKey=7d1a333e9d0749c59774d53f76d298c2&page=${this.state.page}&pageSize=${this.props.pageSize}`;
    this.setState({loading:true})
    let data =await fetch(url);
    let parseData = await data.json();
    this.setState({articles: parseData.articles, totalResults:parseData.totalResults ,loading:false});
    this.props.setProgress(100);

  }


  async componentDidMount(){

    // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props. category}&apiKey=7d1a333e9d0749c59774d53f76d298c2&page=1&pageSize=${this.props.pageSize}`;
    // this.setState({loading:true})
    // let data =await fetch(url);
    // let parseData = await data.json();
    // this.setState({articles: parseData.articles, totalResults:parseData.totalResults ,loading:false})
    this.updateNews();

  }
  handleNextClick= async()=>{
  //   if(this.state.page+1> Math.ceil(this.state.totalResults/this.props.pageSize)){

  //   }
  //   else{
  //   let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props. category}&apiKey=7d1a333e9d0749c59774d53f76d298c2&page=${this.state.page+1}&pageSize=${this.props.pageSize}`;
  //   this.setState({loading:true})
  //   let data =await fetch(url);
  //   let parseData = await data.json();
  //   this.setState({articles: parseData.articles})
  //   this.setState({page: this.state.page+1 ,loading:false})
  // }
  this.setState({page: this.state.page+1});
  this.updateNews();

}

  handlePrevClick=async()=>{
    // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props. category}&apiKey=7d1a333e9d0749c59774d53f76d298c2&page=${this.state.page-1}&pageSize=${this.props.pageSize}`;
    // this.setState({loading:true})
    // let data =await fetch(url);
    // let parseData = await data.json();
    // this.setState({articles: parseData.articles})
    // this.setState({page: this.state.page-1,loading:false })
    this.setState({page: this.state.page-1});
    this.updateNews();

  }
  fetchMoreData = async() => {
    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props. category}&apiKey=7d1a333e9d0749c59774d53f76d298c2&page=${this.state.page+1}&pageSize=${this.props.pageSize}`;
    // this.setState({loading:true})
    this.setState({page: this.state.page+1});
    let data =await fetch(url);
    let parseData = await data.json();
    this.setState({articles: this.state.articles.concat(parseData.articles), totalResults:parseData.totalResults })

  };
  render() {
    return (
      <>
        <h1 className='text-center' style={{margin:'35px 0px', marginTop:'90px'}}>NewsMonkey - Top HeadLines: {this.capitalizeFirstLetter(this.props.category)}</h1>
        {this.state.loading&&<Spinner/>}
        <InfiniteScroll
          dataLength={this.state.articles.length}
          next={this.fetchMoreData}
          hasMore={this.state.articles.length !== this.state.totalResults}
          loader={<Spinner/>}
        >
          <div className="container">
        <div className="row conatiner">
        {this.state.articles.map((element)=>{
            return <div className="col-md-4" key={element.url}>
            <NewsItem  tittle={element.title? element.title.slice(0,40):""} description ={element.description? element.description.slice(0,88):""} imageUrl ={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name}/>
            </div>
        })}
        </div>
        </div>
        </InfiniteScroll>
        <div className="container d-flex justify-content-between my-5">
        {/* <button disabled={this.state.page<=1} type="button" className="btn btn-dark" onClick={this.handlePrevClick}>&larr; Previous</button>
        <button disabled={this.state.page+1> Math.ceil(this.state.totalResults/this.props.pageSize)} type="button" className="btn btn-dark" onClick={this.handleNextClick}>Next &rarr;</button>
         */}

        </div>
      </>
    )
  }
}

export default News


Components/NewsItem.js

import React, { Component } from 'react'

export class NewsItem extends Component {
  render() {
    let {tittle, description,imageUrl, newsUrl,date,source} = this.props;
    return (
      <div className='my-3'>
            <div className="card" >
            <span className="position-absolute top-0 translate-middle badge rounded-pill bg-dark" style= {{left:'87%', zIndex:'1'}}>{source}</span>
              <img src={!imageUrl? "https://img.freepik.com/premium-vector/word-news-vector-banner-with-text-colored-rainbow_100655-2729.jpg?w=2000":imageUrl} className="card-img-top" alt="..."/>
              <div className="card-body">
                <h5 className="card-title">{tittle}...</h5>
                <p className="card-text">{description}...</p>
                <p class="card-text"><small className="text-body-secondary">By {!this.props.author? "Unknown":this.props.author} on {new Date(date).toGMTString()}</small></p>
                <a href={newsUrl} target="_blank" className="btn btn-sm btn-dark" >Read More</a>
              </div>
            </div> 
     </div>
      )
  }
}

export default NewsItem

Components/Navbar

import React, { Component } from 'react'
import { Link } from 'react-router-dom'

export default class Navbar extends Component {
 

  render() {
    return (
      <div>
                        <nav className="navbar fixed-top navbar-expand-lg navbar-dark bg-dark">
                <div className="container-fluid">
                    <Link className="navbar-brand" to="/">NewsMonkey</Link>
                    <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span className="navbar-toggler-icon"></span>
                    </button>
                    <div className="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul className="navbar-nav me-auto mb-2 mb-lg-0">
                        <li className="nav-item">
                        <Link className="nav-link active" aria-current="page" to="/">Home</Link>
                        </li>
                        
                         <li className="nav-item"><Link className="nav-link" to="/business">Business </Link></li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/entertainment">Entertainment</Link>
                        </li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/general">General</Link>
                        </li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/health">Health</Link>
                        </li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/science">Science</Link>
                        </li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/sports">Sports</Link>
                        </li>
                         <li className="nav-item">
                        <Link className="nav-link" to="/">technology</Link>
                        </li>
                        
                        
                    </ul>
                    
                    </div>
                </div>
                </nav>
      </div>
    )
  }
}
